BASE_URL: "ここに有効なドメインを入力してください"
# 例)
# BASE_URL: https://your.domain.com
actions:
action: "Send HTTP request to http://mywebserver.io"
type: "HTTP"
login: "api_tests_user"
password: "$api_tests_password"
port: "4567"
method: "POST"
request: "user_name", "email", "password"
action : "Use POST method to create an account"
action: "Save the input data to the infra with specific user_id"
#User Account created #Get user information
request : "email" or "user_name" and "password"
action: "Use POST method to send the input"
method: "GET"
action: "Query the user info with specific user_id"
#Got user info 
task: "User wants to update info"
request : "email" or "user_name" and "password"
method: "UPDATE"
action: "update the input information with specific user_id"
#Updated user info
task: "User wants to delete the account"
action : "Make sure that user really wants to delete or not by asking twice"
method : "Delete"
action: "Remove the specific user account from the infra"

servers:
- url: https://mywebserver.com

paths:
  "/posts":
    get:
      tags: ["posts"]
      summary: Returns all posts
      responses:
        "200":
          description: All went well
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/post"
    post:
      tags: ["posts"]
      summary: Create a new account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/post"
        required: true
      responses:
        "200":
          description: An account was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/post"
  "/posts/{user_id}":
    parameters:
    - name: user_id # Must be same as the value in the {}.
      # Location of the parameter.
      # Can be `path`, `cookie`, `query` or `header`
      in: path
      description: ID of the post
      # Since this is in the path, the parameter HAS to be required
      required: true
      # Defining the type of the parameter
      schema:
        # In this case, it is just a string
        type: string
    get:
      tags: ["post"]
      summary: Get a single post
      responses:
        "200":
          description: All went well
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/post"
        # But this time, you can also get a 404 response,
        # which is an empty JSON object.
        "404":
          description: Post not found
          content:
            application/json:
              schema:
                type: object
                properties: {}
    put:
      tags: ["post"]
      summary: Update a post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/post"
        required: true
      responses:
        "200":
          description: All went well
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/post"
        "404":
          description: Post not found
          content:
            application/json:
              schema:
                type: object
                properties: {}
    delete:
      tags: ["post"]
      summary: Delete a post
      responses:
        "200":
          description: All went well
          content:
            application/json:
              schema:
                type: object
                properties: {}
        # But this time, you can also get a 404 response,
        # which is an empty JSON object.
        "404":
          description: Post not found
          content:
            application/json:
              schema:
                type: object
                properties: {}

components:
  schemas:
    post:
      type: object
      properties:
        id:
          type: number
          description: ID of the post
        title:
          type: string
          description: Title of the post
        body:
          type: string
          description: Body of the post
        userId:
          type: number
          description: ID of the user who created the post